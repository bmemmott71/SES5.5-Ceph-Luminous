#!/bin/bash
########################################################################################
# USE Enterprise Storage 5.5 & 6
SVER='1.00-002'
SDATE="2020 04 24"
#
# Description:
# Logging: iostat, perf dump, dump_historic_ops, dump_blocked_ops, ops_inflight data, top.
#
# Default behavior:
# iostat will run in subshell and will terminate when script is terminated or exit.
# script will create log files in "pwd".
# script will run for MaxCount=100 iterations, then exit.
# script will sleep for SleepTime=10, each iteration.
# Remove "exit", if you want script to run forever.  Discuraged due to space concerns..
# Use "<ctl>+c" to terminate script.
# Verify iostat subshell was terminated.  iostat log file should stop incramenting in size.
########################################################################################
# 20200311 - Added top info.
########################################################################################
SleepTime=10
MaxCount=100
Count=0

Change the variable when using encrypted osd's: 
# Not encrypted osd's:
mapfile -t osd_array < <(mount | grep ceph- | cut -d- -f2 | cut -d' ' -f1)
# Encrypted osd's:
# mapfile -t osd_array < <(mount | grep ceph- | cut -d " " -f3 | cut -d- -f2)

trap "exit" INT TERM ERR
trap "kill 0" EXIT
MYDIR=$(pwd)

DateTime=$(date +%Y%m%d-%H%M%S)
echo "  iostat will run as a background process."
echo "  Writting log files to: $MYDIR "
nohup /usr/bin/iostat -xt $SleepTime >> $"$MYDIR/$DateTime-$HOSTNAME-iostat.log" &

child_count=$(($(pgrep --parent $$ | wc -l) - 1))
echo "  SubShells Created: $child_count " 2>&1
echo "  Logging: iostat, perf dump, dump_historic_ops, dump_blocked_ops, ops_inflight data, top"
echo "  Press '<ctl>+c' to terminate."
while [ : ] ; do
  Count=$(($Count+1))
  echo -ne "  Sleep cycles: " "\b$Count" \\r
  for x in "${osd_array[@]}"; do
    { date +%Y%m%d-%H%M%S;
    ceph daemon osd.$x perf dump;
    ceph daemon osd.$x dump_historic_ops;
    ceph daemon osd.$x dump_blocked_ops;
    ceph daemon osd.$x dump_ops_in_flight;
    } >> $"$MYDIR/$DateTime-$HOSTNAME-perf_dump$x.log"
  done
  echo $(date +%Y%m%d-%H%M%S) >> $MYDIR$DateTime-$HOSTNAME-top.log
  /usr/bin/top -b -n 1| head -n 30 >> $"$MYDIR/$DateTime-$HOSTNAME-top.log" 
  echo "" >> $MYDIR$DateTime-$HOSTNAME-top.log 
  if [ "$Count" -eq "$MaxCount" ]; then
    exit
  fi
  sleep $SleepTime
done
